TODO:
Write report


All messages that cause state change on the receving side must be acknowledged
All messages that cause state change on the receving side must contain session number
Client or server receiving a message that is to be acknowledged must answer with the appropriate ack
All replies must be sent to the sender port of the packet eliciting it
Session numbers are updated when action has been taken based on the message (if no action is taken, e.g. b/c of error, then it is not updated).

For report: 
trouble with lost acks on connect
uses signed ints for session numbers. they will overflow
single threaded server


The server always responds from a new socket (=new port).
[message_type/data0/data1]
	
----------------- Client -----------------
Send:
	010 connect: username
		011 connection_successful: token, banner
			013 connection_ack
		012 connection_failed: reason
			013 connection_ack
	
	020 disconnect: token, session_number, message
		021 disconnect_ack
		
	040 public_message: token, session_number, message
		041 public_message_ack
		
	050 private_message: token, session_number, to_username, message
		051 private_message_ack
		052 private_message_error: reason
			*display reason*
	
	060 list_request: token
		061 list_response: list of users
		*display list of users*
	
Receive:
	030 ping_request: token
		031 ping_response
			
	070 server_message: token, session_number, sender_name, type{0=public, 1=private, 2=status}, message
		*update remote session num*
		*display message*
		071 server_message_ack
	
----------------- Server -----------------
Send:
	030 ping_request: token
		031 ping_response
			*update user activity time*
			
	070 server_message: token, session_number, sender_name, type{0=public, 1=private, 2=status}, message
		071 server_message_ack: token

Receive:
	010 connect: username
		011 connection_successful: token, banner
			013 connection_ack
		if username not free
		012 connection_failed: reason
			013 connection_ack
				
	020 disconnect: token, session_number, message
		021 disconnect_ack
			*display "<username> has quit <message>"*
			*remove user state*
	
	040 public_message: token, session_number, message
		*update session num*
		041 public_message_ack
		
	050 private_message: token, session_number, to_username, message
		051 private_message_ack
			*update session num*
		if no such user
		052 private_message_error: reason
		
	060 list_request: token
		061 list_response: list of users
